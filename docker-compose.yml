version: '3.8'

services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: DockerFile
    ports:
      - "${FRONTEND_PORT:-8501}:8501"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - pichat-network

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "${SERVER_PORT:-8080}:8080"
    restart: unless-stopped
    networks:
      - pichat-network
    environment:
      - COSMOS_ENDPOINT=${COSMOS_ENDPOINT}
      - COSMOS_KEY=${COSMOS_KEY}
      - COSMOS_DATABASE=pichat
      - COSMOS_CONTAINER_CHATS=chats
      - COSMOS_CONTAINER_MESSAGES=messages
      - COSMOS_CONTAINER_USERS=users
      - COSMOS_CONTAINER_SETTINGS=settings
      - COSMOS_CONTAINER_PROCESSED_MESSAGES=processed_messages
      # Azure OpenAI configuration
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      # Azure IoT Hub configuration
      - IOT_HUB_NAME=${IOT_HUB_NAME}
      - IOT_HUB_HOST_NAME=${IOT_HUB_HOST_NAME}
      - EVENT_HUB_COMPATIBLE_CONN_STR=${EVENT_HUB_COMPATIBLE_CONN_STR}
      - IOT_HUB_CONSUMER_GROUP=${IOT_HUB_CONSUMER_GROUP}
      - IOT_HUB_ENABLE=${IOT_HUB_ENABLE}
    volumes:
      - backend-data:/app/data

networks:
  pichat-network:
    driver: bridge

volumes:
  backend-data:
